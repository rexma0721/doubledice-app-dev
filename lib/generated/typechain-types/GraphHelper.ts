/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type VirtualFloorMetadataOpponentStruct = {
  title: string;
  image: string;
};

export type VirtualFloorMetadataOpponentStructOutput = [string, string] & {
  title: string;
  image: string;
};

export type VirtualFloorMetadataOutcomeStruct = { title: string };

export type VirtualFloorMetadataOutcomeStructOutput = [string] & {
  title: string;
};

export type VirtualFloorMetadataResultSourceStruct = {
  title: string;
  url: string;
};

export type VirtualFloorMetadataResultSourceStructOutput = [string, string] & {
  title: string;
  url: string;
};

export type VirtualFloorMetadataV1Struct = {
  category: string;
  subcategory: string;
  title: string;
  description: string;
  isListed: boolean;
  opponents: VirtualFloorMetadataOpponentStruct[];
  outcomes: VirtualFloorMetadataOutcomeStruct[];
  resultSources: VirtualFloorMetadataResultSourceStruct[];
  discordChannelId: string;
  extraData: BytesLike;
};

export type VirtualFloorMetadataV1StructOutput = [
  string,
  string,
  string,
  string,
  boolean,
  VirtualFloorMetadataOpponentStructOutput[],
  VirtualFloorMetadataOutcomeStructOutput[],
  VirtualFloorMetadataResultSourceStructOutput[],
  string,
  string
] & {
  category: string;
  subcategory: string;
  title: string;
  description: string;
  isListed: boolean;
  opponents: VirtualFloorMetadataOpponentStructOutput[];
  outcomes: VirtualFloorMetadataOutcomeStructOutput[];
  resultSources: VirtualFloorMetadataResultSourceStructOutput[];
  discordChannelId: string;
  extraData: string;
};

export interface GraphHelperInterface extends utils.Interface {
  contractName: "GraphHelper";
  functions: {
    "decodeVirtualFloorMetadataV1(bytes)": FunctionFragment;
    "encodeVirtualFloorMetadataV1((string,string,string,string,bool,(string,string)[],(string)[],(string,string)[],string,bytes))": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "decodeVirtualFloorMetadataV1",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "encodeVirtualFloorMetadataV1",
    values: [VirtualFloorMetadataV1Struct]
  ): string;

  decodeFunctionResult(
    functionFragment: "decodeVirtualFloorMetadataV1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "encodeVirtualFloorMetadataV1",
    data: BytesLike
  ): Result;

  events: {};
}

export interface GraphHelper extends BaseContract {
  contractName: "GraphHelper";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: GraphHelperInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    decodeVirtualFloorMetadataV1(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [VirtualFloorMetadataV1StructOutput] & {
        decoded: VirtualFloorMetadataV1StructOutput;
      }
    >;

    encodeVirtualFloorMetadataV1(
      decoded: VirtualFloorMetadataV1Struct,
      overrides?: CallOverrides
    ): Promise<[string] & { encoded: string }>;
  };

  decodeVirtualFloorMetadataV1(
    encoded: BytesLike,
    overrides?: CallOverrides
  ): Promise<VirtualFloorMetadataV1StructOutput>;

  encodeVirtualFloorMetadataV1(
    decoded: VirtualFloorMetadataV1Struct,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    decodeVirtualFloorMetadataV1(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<VirtualFloorMetadataV1StructOutput>;

    encodeVirtualFloorMetadataV1(
      decoded: VirtualFloorMetadataV1Struct,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    decodeVirtualFloorMetadataV1(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    encodeVirtualFloorMetadataV1(
      decoded: VirtualFloorMetadataV1Struct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    decodeVirtualFloorMetadataV1(
      encoded: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    encodeVirtualFloorMetadataV1(
      decoded: VirtualFloorMetadataV1Struct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
